data.months
months(1:12)
1:12
months(1)
months(,1)
month(1)
## What is mean total number of steps taken per day?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
library(magrittr)
get_read <- function(link){
if(!file.exists('activity.zip')){
download.file(link, 'activity.zip', method = 'curl')
}
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
read.csv('activity.csv')
}
process <- function(data){
data$date <- as.Date(data$date)
return(data)
}
activity_data <- get_read('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip') %>%
process()
```
activity_data <- get_read('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip') %>%
process()
library (dplyr)
# Create data frame of daily total, mean, and median steps
per_day <- function(data){
group_by(data, date) %>%
summarise(sum(steps,na.rm = TRUE),
mean(steps,na.rm = TRUE),
median(steps,na.rm = TRUE))
}
# Call funtion to build df and set column names
daily_steps <- per_day(activity_data)
names(daily_steps) <- c('date', 'total_steps','mean_steps', 'median_steps')
# Create histogram of total daily steps
hist(daily_steps$total_steps, xlab= 'Date', ylab = 'Steps', main = 'Daily total steps')
# Report the daily values by column
report_daily <- function(df, column){
df[c('date',column)] %>%
print(.,n=length(df$date))
}
mean(activity_data$steps)
mean(activity_data$steps,na.rm = T)
mean(daily_steps$total_steps)
median(daily_steps$total_steps)
rm(list=ls())
download.file(link, 'repdata_data_StormData.csv.bz2', method = 'curl')
download.file(https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2, 'repdata_data_StormData.csv.bz2', method = 'curl')
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2', 'repdata_data_StormData.csv.bz2', method = 'curl')
getwd()
makewd('Box Sync/datasciencecoursera/Reproducible_Research/PeerAssesment2/')
setwd('Box Sync/datasciencecoursera/Reproducible_Research/PeerAssesment2/')
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2', 'repdata_data_StormData.csv.bz2', method = 'curl')
unzip('repdata_data_StormData.csv.bz2')
test<- read.csv('repdata_data_StormData.csv.bz2')
head(test)
rm(test)
storm_data <- get_read('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2')
get_read <- function(link){
if(!file.exists('repdata_data_StormData.csv.bz2')){
download.file(link, 'repdata_data_StormData.csv.bz2', method = 'curl')
}
read.csv('repdata_data_StormData.csv.bz2')
}
storm_data <- get_read('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2')
head(storm_data)
unique(storm_data$EVTYPE)
head(storm_data)
storm_data$PROPDMG
head(storm_data)
tail(get_read())
tail(storm_data)
rbind(c('K','M','B'),c(1000,1000000,1000000000))
cbind(c('K','M','B'),c(1000,1000000,1000000000))
multiply <- cbind(c('K','M','B'),c(1000,1000000,1000000000))
match(storm_data$PROPDMGEXP,multiply[,1])
multiply[,1]
match(storm_data$PROPDMGEXP,multiply[,2])
match(storm_data$PROPDMGEXP,multiply[,1])
storm_data$PROPDMGEXP
is.na(storm_data$PROPDMG)
storm_data$PROPDMG
storm_data$PROPDMG==0
is.na(storm_data$PROPDMGEXP)
is.null(storm_data$PROPDMGEXP)
?mutate
ifelse(storm_data$PROPDMGEXP=="K", storm_data$PROPDMG*1000, NA)
storm_data$PROPDMGEXP[9669:9171]
storm_data$PROPDMG[9669:9171]
storm_data$PROPDMG[9785:9790]
ifelse(storm_data$PROPDMGEXP=="K", storm_data$PROPDMG*1000, ifelse(storm_data$PROPDMGEXP=="M",storm_data$PROPDMG*1000000))
ifelse(storm_data$PROPDMGEXP=="K", storm_data$PROPDMG*1000, ifelse(storm_data$PROPDMGEXP=="M",storm_data$PROPDMG*1000000,NA))
ifelse(storm_data$PROPDMGEXP=="K", storm_data$PROPDMG*1000, ifelse(storm_data$PROPDMGEXP=="M",storm_data$PROPDMG*1000000,ifelse(storm_data$PROPDMGEXP=="B",storm_data$PROPDMG*1000000000,NA)))
storm_data$propdam <- ifelse(storm_data$PROPDMGEXP=="K", storm_data$PROPDMG*1000, ifelse(storm_data$PROPDMGEXP=="M",storm_data$PROPDMG*1000000,ifelse(storm_data$PROPDMGEXP=="B",storm_data$PROPDMG*1000000000,NA)))
storm_data$propdam
storm_data$propdam[9000:9100]
for x in storm_data$propdam[9000:9100]:
for(x in storm_data$propdam[9000:9100]){print x}
?for
afd
head(storm_data)
ifelse(storm_data$dmg_exp=="K", storm_data$dmg_amt*1000, ifelse(storm_data$dmg_exp=="M",storm_data$dmg_amt*1000000,ifelse(storm_data$dmg_exp=="B",storm_data$dmg_amt*1000000000,NA)))
damage_convert <- function(dmg_exp,dmg_amt) {
ifelse(storm_data$dmg_exp=="K", storm_data$dmg_amt*1000, ifelse(storm_data$dmg_exp=="M",storm_data$dmg_amt*1000000,ifelse(storm_data$dmg_exp=="B",storm_data$dmg_amt*1000000000,NA)))
}
damage_convert('PROPDMGEXP','PROPDMG')
damage_convert <- function(dmg_exp,dmg_amt) {ifelse(storm_data$dmg_exp=="K", storm_data$dmg_amt*1000, ifelse(storm_data$dmg_exp=="M",storm_data$dmg_amt*1000000,ifelse(storm_data$dmg_exp=="B",storm_data$dmg_amt*1000000000,NA)))
}
damage_convert('PROPDMGEXP','PROPDMG')
damage_convert(PROPDMGEXP,PROPDMG)
damage_convert <- function(dmg_exp,dmg_amt) {ifelse(storm_data[dmg_exp]=="K", storm_data[dmg_amt]*1000, ifelse(storm_data[dmg_exp]=="M",storm_data[dmg_amt]*1000000,ifelse(storm_data[dmg_exp]=="B",storm_data[dmg_amt]*1000000000,NA)))
}
damage_convert(PROPDMGEXP,PROPDMG)
damage_convert('PROPDMGEXP','PROPDMG')
storm_data$propdam <- damage_convert('PROPDMGEXP','PROPDMG')
storm_data$cropdam <- damage_convert('CROPDMG', 'CROPDMGEXP')
storm_data$totaldam <- storm_data$propdam + storm_data$cropdam
storm_data$propdam + storm_data$cropdam
sum(storm_data$propdam, storm_data$cropdam)
class(storm_data$propdam)
damage_convert <- function(dmg_exp,dmg_amt) {ifelse(storm_data[dmg_exp]=="K", storm_data[dmg_amt]*1000, ifelse(storm_data[dmg_exp]=="M",storm_data[dmg_amt]*1000000,ifelse(storm_data[dmg_exp]=="B",storm_data[dmg_amt]*1000000000,0)))
}
storm_data$propdam <- damage_convert('PROPDMGEXP', 'PROPDMG')
storm_data$cropdam <- damage_convert('CROPDMG', 'CROPDMGEXP')
storm_data$propdam + storm_data$cropdam
class(storm_data$propdam)
as.numeric(storm_data$propdam) + as.numeric(storm_data$cropdam)
head(storm_data)
th + mil + bil
damage_convert <- function(dmg_exp,dmg_amt) {
th <- ifelse(storm_data[dmg_exp]=="K", storm_data[dmg_amt]*1000, 0)
mil <- ifelse(storm_data[dmg_exp]=="M",storm_data[dmg_amt]*1000000, 0)
bil <- ifelse(storm_data[dmg_exp]=="B",storm_data[dmg_amt]*1000000000, 0)
th + mil + bil
}
storm_data$propdam <- damage_convert('PROPDMGEXP', 'PROPDMG')
damage_convert <- function(dmg_exp,dmg_amt) {
th <- ifelse(storm_data[dmg_exp]=="K", storm_data[dmg_amt]*1000, 0)
mil <- ifelse(storm_data[dmg_exp]=="M",storm_data[dmg_amt]*1000000, 0)
bil <- ifelse(storm_data[dmg_exp]=="B",storm_data[dmg_amt]*1000000000, 0)
class(th)
}
storm_data$propdam <- damage_convert('PROPDMGEXP', 'PROPDMG')
head(storm_data$propdam)
storm_data <- get_read('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2')
test<- c(5,10,15)
class(test)
class(storm_data$PROPDMG)
class(test*1000)
class(ifelse(test==5,test*1000,test))
class(ifelse(test=='5',test*1000,test))
class(storm_data['PROPDMG'])
class(storm_data['PROPDMG'][1])
class(storm_data['PROPDMG',])
class(storm_data[,'PROPDMG'])
damage_convert <- function(dmg_exp,dmg_amt) {
th <- ifelse(storm_data[,dmg_exp]=="K", storm_data[,dmg_amt]*1000, 0)
mil <- ifelse(storm_data[,dmg_exp]=="M",storm_data[,dmg_amt]*1000000, 0)
bil <- ifelse(storm_data[,dmg_exp]=="B",storm_data[,dmg_amt]*1000000000, 0)
th + mil + bil
}
storm_data$propdam <- damage_convert('PROPDMGEXP', 'PROPDMG')
head(storm_data)
storm_data$cropdam <- damage_convert('CROPDMG', 'CROPDMGEXP')
storm_data$totaldam <- storm_data$propdam + storm_data$cropdam
head(storm_data)
rm(list=ls())
